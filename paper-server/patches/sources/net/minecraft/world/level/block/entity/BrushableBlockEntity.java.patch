--- a/net/minecraft/world/level/block/entity/BrushableBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/BrushableBlockEntity.java
@@ -97,15 +_,28 @@
                 .withParameter(LootContextParams.TOOL, stack)
                 .create(LootContextParamSets.ARCHAEOLOGY);
             ObjectArrayList<ItemStack> randomItems = lootTable.getRandomItems(lootParams, this.lootTableSeed);
+            ItemStack itemStack;
 
-            this.item = switch (randomItems.size()) {
-                case 0 -> ItemStack.EMPTY;
-                case 1 -> (ItemStack)randomItems.getFirst();
+            // PaperC start
+            switch (randomItems.size()) {
+                case 0 -> itemStack = ItemStack.EMPTY;
+                case 1 -> itemStack = randomItems.getFirst();
                 default -> {
                     LOGGER.warn("Expected max 1 loot from loot table {}, but got {}", this.lootTable.location(), randomItems.size());
-                    yield randomItems.getFirst();
+                    itemStack = randomItems.getFirst();
                 }
             };
+
+            net.craftoriya.events.BrushableBlockLootGenerateEvent event = new net.craftoriya.events.BrushableBlockLootGenerateEvent(lootTable.craftLootTable, itemStack.asBukkitCopy());
+            org.bukkit.Bukkit.getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                this.item = ItemStack.EMPTY;
+            } else {
+                this.item = ItemStack.fromBukkitCopy(event.getGeneratedItem());
+            }
+            // PaperC end
+
             this.lootTable = null;
             this.setChanged();
         }
@@ -138,7 +_,10 @@
             double d5 = blockPos.getZ() + 0.5 * d1 + d2;
             ItemEntity itemEntity = new ItemEntity(level, d3, d4, d5, this.item.split(level.random.nextInt(21) + 10));
             itemEntity.setDeltaMovement(Vec3.ZERO);
-            level.addFreshEntity(itemEntity);
+            // CraftBukkit start
+            org.bukkit.block.Block bblock = org.bukkit.craftbukkit.block.CraftBlock.at(this.level, this.worldPosition);
+            org.bukkit.craftbukkit.event.CraftEventFactory.handleBlockDropItemEvent(bblock, bblock.getState(), (ServerPlayer) player, java.util.List.of(itemEntity));
+            // CraftBukkit end
             this.item = ItemStack.EMPTY;
         }
     }
@@ -167,7 +_,7 @@
 
     private boolean tryLoadLootTable(CompoundTag tag) {
         if (tag.contains("LootTable", 8)) {
-            this.lootTable = ResourceKey.create(Registries.LOOT_TABLE, ResourceLocation.parse(tag.getString("LootTable")));
+            this.lootTable = net.minecraft.Optionull.map(ResourceLocation.tryParse(tag.getString("LootTable")), rl -> ResourceKey.create(Registries.LOOT_TABLE, rl)); // Paper - Validate ResourceLocation
             this.lootTableSeed = tag.getLong("LootTableSeed");
             return true;
         } else {
